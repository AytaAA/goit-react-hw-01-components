{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendListItem.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Statistics/Statistics.js","components/TransactionHistory/TransactionHistory.js","components/Profile/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FriendListItem","friends","map","id","name","avatar","isOnline","className","style","item","userOnline","userOffline","src","alt","width","FriendList","friend_list","Statistics","stats","title","statistics","container","stat_list","label","percentage","TransactionHistory","transactions","transaction_history","table_head","table_body","type","amount","currency","table_item","item_name","Profile","data","tag","location","followers","likes","views","styles","description","stats_item","quantity","App","userData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,WAAa,4BAA4B,MAAQ,uBAAuB,SAAW,4B,gBCAzSD,EAAOC,QAAU,CAAC,oBAAsB,gDAAgD,MAAQ,kCAAkC,UAAY,sCAAsC,KAAO,iCAAiC,WAAa,yC,gBCAzOD,EAAOC,QAAU,CAAC,YAAc,oCAAoC,KAAO,6BAA6B,WAAa,mCAAmC,YAAc,oCAAoC,OAAS,+BAA+B,KAAO,+B,gBCAzPD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,MAAQ,0BAA0B,UAAY,8BAA8B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,suGCaxMC,EAZQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACKA,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACT,qBAAIC,UAAWC,IAAMC,KAArB,UACI,sBAAMF,UAAWD,EAAWE,IAAME,WAAaF,IAAMG,cACrD,qBAAKJ,UAAWC,IAAMH,OAAQO,IAAKP,EAAQQ,IAAI,GAAGC,MAAM,QACxD,mBAAGP,UAAWC,IAAMJ,KAApB,SAA2BA,MAHCD,SCK7BY,EANI,SAAC,GAAD,IAAGd,EAAH,EAAGA,QAAH,OACf,oBAAIM,UAAWC,IAAMQ,YAArB,SACI,cAAC,EAAD,CAAgBf,QAASA,O,gBCelBgB,EAlBI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACzB,OACI,yBAASZ,UAAWC,IAAMY,WAA1B,SACI,sBAAKb,UAAWC,IAAMa,UAAtB,UACKF,GAAS,oBAAIZ,UAAWC,IAAMW,MAArB,SAA6BA,IACvC,oBAAIZ,UAAWC,IAAMc,UAArB,SACKJ,EAAMhB,KAAI,gBAAGC,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WAAd,OACP,qBAAIjB,UAAWC,IAAMC,KAArB,UACI,uBAAMF,UAAWC,IAAMe,MAAvB,UAA+BA,EAA/B,OACA,uBAAMhB,UAAWC,IAAMgB,WAAvB,UAAoCA,EAApC,UAF4BrB,QAKlC,U,gBCgBPsB,EA5BY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACI,wBAAOnB,UAAWC,IAAMmB,oBAAxB,UACI,uBAAOpB,UAAWC,IAAMoB,WAAxB,SACI,+BACI,oBAAIrB,UAAWC,IAAMe,MAArB,kBACA,oBAAIhB,UAAWC,IAAMe,MAArB,oBACA,oBAAIhB,UAAWC,IAAMe,MAArB,2BAIR,uBAAOhB,UAAWC,IAAMqB,WAAxB,SACKH,EAAaxB,KAAI,gBAAGC,EAAH,EAAGA,GAAI2B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OACd,qBAAIzB,UAAWC,IAAMyB,WAArB,UACI,oBAAI1B,UAAWC,IAAM0B,UAArB,SAAiCJ,IACjC,oBAAIvB,UAAWC,IAAMC,KAArB,SAA4BsB,IAC5B,oBAAIxB,UAAWC,IAAMC,KAArB,SAA4BuB,MAHM7B,Y,gBCoB3CgC,EAlCC,SAAC,GAAD,QACZC,KACIhC,EAFQ,EAERA,KACAiC,EAHQ,EAGRA,IACAC,EAJQ,EAIRA,SACAjC,EALQ,EAKRA,OALQ,IAMRa,MANQ,EAMCqB,UAND,EAMYC,MANZ,EAMmBC,MANnB,OASZ,sBAAKlC,UAAWmC,IAAOrB,UAAvB,UACI,sBAAKd,UAAWmC,IAAOC,YAAvB,UACI,qBAAK/B,IAAKP,EAAQQ,IAAI,gHAAsBN,UAAWmC,IAAOrC,SAC9D,mBAAGE,UAAWmC,IAAOtC,KAArB,SAA4BA,IAC5B,oBAAGG,UAAWmC,IAAOL,IAArB,cAA4BA,KAC5B,mBAAG9B,UAAWmC,IAAOJ,SAArB,SAAgCA,OAGpC,qBAAI/B,UAAWmC,IAAOxB,MAAtB,UACI,qBAAIX,UAAWmC,IAAOE,WAAtB,UACI,sBAAMrC,UAAWmC,IAAOnB,MAAxB,wBACA,sBAAMhB,UAAWmC,IAAOG,SAAxB,qBAEJ,qBAAItC,UAAWmC,IAAOE,WAAtB,UACI,sBAAMrC,UAAWmC,IAAOnB,MAAxB,oBACA,sBAAMhB,UAAWmC,IAAOG,SAAxB,qBAEJ,qBAAItC,UAAWmC,IAAOE,WAAtB,UACI,sBAAMrC,UAAWmC,IAAOnB,MAAxB,oBACA,sBAAMhB,UAAWmC,IAAOG,SAAxB,4BCRDC,MAXf,WACI,OACI,sBAAKvC,UAAU,MAAf,UACI,cAAC,EAAD,CAAS6B,KAAMW,IACf,cAAC,EAAD,CAAY5B,MAAM,eAAeD,MAAOkB,IACxC,cAAC,EAAD,CAAYnC,QAASA,IACrB,cAAC,EAAD,CAAoByB,aAAcA,QCL/BsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a98090fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__3c3QK\",\"avatar\":\"Profile_avatar__3_Uec\",\"name\":\"Profile_name__1bDWY\",\"tag\":\"Profile_tag__nSzdZ\",\"location\":\"Profile_location__3OmA0\",\"stats\":\"Profile_stats__JaUwF\",\"stats_item\":\"Profile_stats_item__3MxXD\",\"label\":\"Profile_label__3fAea\",\"quantity\":\"Profile_quantity__2dhaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__2CwBD\",\"label\":\"TransactionHistory_label__2BKgY\",\"item_name\":\"TransactionHistory_item_name__22qkA\",\"item\":\"TransactionHistory_item__2FCEc\",\"table_item\":\"TransactionHistory_table_item__3WaQo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"FriendListItem_friend_list__3enM0\",\"item\":\"FriendListItem_item__fK8Gj\",\"userOnline\":\"FriendListItem_userOnline__1gVN7\",\"userOffline\":\"FriendListItem_userOffline__94LpS\",\"avatar\":\"FriendListItem_avatar__R4BZC\",\"name\":\"FriendListItem_name__66JbI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__3P6qb\",\"title\":\"Statistics_title__2jytr\",\"stat_list\":\"Statistics_stat_list__38DIc\",\"item\":\"Statistics_item__1OYa9\",\"label\":\"Statistics_label__3sgqi\",\"percentage\":\"Statistics_percentage__31Bzg\"};","import style from \"./FriendListItem.module.css\"\r\n\r\nconst FriendListItem = ({ friends }) => (\r\n    <>\r\n        {friends.map(({ id, name, avatar, isOnline }) => (\r\n            <li className={style.item} key={id}>\r\n                <span className={isOnline ? style.userOnline : style.userOffline}></span>\r\n                <img className={style.avatar} src={avatar} alt=\"\" width=\"100\" />\r\n                <p className={style.name}>{name}</p>\r\n            </li>\r\n        ))}\r\n    </>\r\n)\r\n\r\nexport default FriendListItem\r\n","import FriendListItem from \"./FriendListItem\"\r\nimport PropTypes from \"prop-types\"\r\nimport style from \"./FriendListItem.module.css\"\r\n\r\nconst FriendList = ({ friends }) => (\r\n    <ul className={style.friend_list}>\r\n        <FriendListItem friends={friends} />\r\n    </ul>\r\n)\r\n\r\nexport default FriendList\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            avatar: PropTypes.string.isRequired,\r\n            id: PropTypes.number.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n        }).isRequired\r\n    ).isRequired,\r\n}\r\n","import PropTypes from \"prop-types\"\r\nimport style from \"./Statistics.module.css\"\r\n\r\nconst Statistics = ({ stats, title }) => {\r\n    return (\r\n        <section className={style.statistics}>\r\n            <div className={style.container}>\r\n                {title && <h2 className={style.title}>{title}</h2>}\r\n                <ul className={style.stat_list}>\r\n                    {stats.map(({ id, label, percentage }) => (\r\n                        <li className={style.item} key={id}>\r\n                            <span className={style.label}>{label} </span>\r\n                            <span className={style.percentage}>{percentage}% </span>\r\n                        </li>\r\n                    ))}\r\n                </ul>{\" \"}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Statistics\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        }).isRequired\r\n    ).isRequired,\r\n}\r\n","import PropTypes from \"prop-types\"\r\nimport style from \"./TransactionHistory.module.css\"\r\n\r\nconst TransactionHistory = ({ transactions }) => {\r\n    return (\r\n        <table className={style.transaction_history}>\r\n            <thead className={style.table_head}>\r\n                <tr>\r\n                    <th className={style.label}>Type</th>\r\n                    <th className={style.label}>Amount</th>\r\n                    <th className={style.label}>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className={style.table_body}>\r\n                {transactions.map(({ id, type, amount, currency }) => (\r\n                    <tr className={style.table_item} key={id}>\r\n                        <td className={style.item_name}>{type}</td>\r\n                        <td className={style.item}>{amount}</td>\r\n                        <td className={style.item}>{currency}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n    transactions: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired).isRequired).isRequired,\r\n}\r\n\r\nexport default TransactionHistory\r\n","import styles from \"./Profile.module.css\"\r\n\r\nconst Profile = ({\r\n    data: {\r\n        name,\r\n        tag,\r\n        location,\r\n        avatar,\r\n        stats: { followers, likes, views },\r\n    },\r\n}) => (\r\n    <div className={styles.container}>\r\n        <div className={styles.description}>\r\n            <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tag}>@{tag}</p>\r\n            <p className={styles.location}>{location}</p>\r\n        </div>\r\n\r\n        <ul className={styles.stats}>\r\n            <li className={styles.stats_item}>\r\n                <span className={styles.label}>Followers </span>\r\n                <span className={styles.quantity}>1000</span>\r\n            </li>\r\n            <li className={styles.stats_item}>\r\n                <span className={styles.label}>Views </span>\r\n                <span className={styles.quantity}>2000</span>\r\n            </li>\r\n            <li className={styles.stats_item}>\r\n                <span className={styles.label}>Likes </span>\r\n                <span className={styles.quantity}>3000</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Profile\r\n\r\n// Profile.propTypes = {\r\n//         PropTypes.arrayOf({\r\n//             name: PropTypes.string.isRequired,\r\n//             tag: PropTypes.string.isRequired,\r\n//             location: PropTypes.string.isRequired,\r\n//             avatar: PropTypes.string.isRequired,\r\n//             followers: PropTypes.number.isRequired,\r\n//             views: PropTypes.number.isRequired,\r\n//             likes: PropTypes.number.isRequired,\r\n//         }).isRequired\r\n//     ).isRequired,\r\n// }\r\n","import data from \"./data/statistical-data.json\"\nimport transactions from \"./data/transaction.json\"\nimport userData from \"./data/user.json\"\nimport friends from \"./data/friends.json\"\n\n//components\nimport FriendList from \"./components/FriendList/FriendList\"\nimport Statistics from \"./components/Statistics/Statistics\"\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\"\nimport Profile from \"./components/Profile/Profile\"\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Profile data={userData} />\n            <Statistics title=\"Upload stats\" stats={data} />\n            <FriendList friends={friends} />\n            <TransactionHistory transactions={transactions} />\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}